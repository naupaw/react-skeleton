{"version":3,"sources":["../../dist/index.es.js","App.js","serviceWorker.js","index.js"],"names":["_assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","style","props","propStyle","maxWidth","width","round","square","height","innerClassName","className","push","dark","createElement","join","App","href","language","atomDark","display","alignItems","flex","marginLeft","background","color","margin","padding","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yKAgBIA,EAAU,WAaZ,OAZAA,EAAUC,OAAOC,QAAU,SAAkBC,GAC3C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAG9C,IAAK,IAAII,KAFTL,EAAIG,UAAUF,GAGRJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAI7D,OAAON,IAGMU,MAAMC,KAAMP,YAGzBQ,EACU,2BADVA,EAEO,wBAFPA,EAGO,wBAHPA,EAKM,uBA4BK,EAxBA,SAAkBC,GAC/B,IAAIC,EAAY,CACdC,SAAUF,EAAMG,MAChBA,MAAOH,EAAMI,OAASJ,EAAMK,OAASL,EAAMG,MAAQ,OACnDG,OAAQN,EAAMI,OAASJ,EAAMK,OAASL,EAAMG,MAAQH,EAAMM,QAExDC,EAAiB,CAACR,EAAgBC,EAAMQ,WAY5C,OAVIR,EAAMI,OACRG,EAAeE,KAAKV,GAGlBC,EAAMU,KACRH,EAAeE,KAAKV,GAEpBQ,EAAeE,KAAKV,GAGf,IAAMY,cAAc,MAAO,CAChCH,UAAWD,EAAeK,KAAK,KAC/Bb,MAAOf,EAAQA,EAAQ,GAAIiB,GAAYD,EAAMD,U,gCC2ClCc,MAjGf,WACE,OACE,yBAAKL,UAAU,OACb,qDACA,uBAAGM,KAAK,2CAAR,eACA,oHAIA,4CACA,kBAAC,IAAD,CAAmBC,SAAS,OAAOhB,MAAOiB,KAA1C,qCARF,KAYE,kBAAC,IAAD,CAAmBD,SAAS,OAAOhB,MAAOiB,KAA1C,kCAGA,2CACA,kBAAC,IAAD,CAAmBD,SAAS,MAAMhB,MAAOiB,KAAzC,qOAaA,gDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAmBD,SAAS,MAAMhB,MAAOiB,KAAzC,gBAGA,4CACA,kBAAC,EAAD,CAAUb,MAAO,KACjB,kBAAC,EAAD,CAAUA,MAAO,MACjB,kBAAC,EAAD,CAAUA,MAAO,MACjB,kBAAC,EAAD,CAAUA,MAAO,KACjB,kBAAC,IAAD,CAAmBY,SAAS,MAAMhB,MAAOiB,KAAzC,2BAGA,6CACA,kBAAC,EAAD,CAAUb,MAAO,IAAKG,OAAQ,IAC9B,kBAAC,EAAD,CAAUH,MAAO,IAAKG,OAAQ,IAC9B,kBAAC,IAAD,CAAmBS,SAAS,MAAMhB,MAAOiB,KAAzC,uCAGA,uCACA,yBAAKjB,MAAO,CAAEkB,QAAS,OAAQC,WAAY,WACzC,6BACE,kBAAC,EAAD,CAAUd,OAAK,EAACD,MAAO,MAEzB,yBAAKJ,MAAO,CAAEoB,KAAM,EAAGC,WAAY,SACjC,kBAAC,EAAD,CAAUjB,MAAO,MACjB,kBAAC,EAAD,CAAUA,MAAO,QAGrB,kBAAC,IAAD,CAAmBY,SAAS,MAAMhB,MAAOiB,KAAzC,iCAGA,sCACA,yBAAKjB,MAAO,CAAEkB,QAAS,OAAQC,WAAY,WACzC,6BACE,kBAAC,EAAD,CAAUb,QAAM,EAACF,MAAO,MAE1B,yBAAKJ,MAAO,CAAEoB,KAAM,EAAGC,WAAY,SACjC,kBAAC,EAAD,CAAUjB,MAAO,MACjB,kBAAC,EAAD,CAAUA,MAAO,QAGrB,kBAAC,IAAD,CAAmBY,SAAS,MAAMhB,MAAOiB,KAAzC,kCAGA,yBACEjB,MAAO,CACLsB,WAAY,OACZC,MAAO,OACPC,OAAQ,aACRC,QAAS,kBAGX,yCACA,kBAAC,EAAD,CAAUrB,MAAO,IAAKO,MAAI,IAC1B,kBAAC,EAAD,CAAUP,MAAO,IAAKG,OAAQ,GAAII,MAAI,KAExC,kBAAC,IAAD,CAAmBK,SAAS,MAAMhB,MAAOiB,KAAzC,mCCrFcS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b535be74.chunk.js","sourcesContent":["import React from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nvar style = {\n  \"skeleton\": \"skeleton_skeleton__1U4CF\",\n  \"round\": \"skeleton_round__HxJH7\",\n  \"light\": \"skeleton_light__3vUFI\",\n  \"skeleton-anim\": \"skeleton_skeleton-anim__3iXFV\",\n  \"dark\": \"skeleton_dark__2weHo\",\n  \"skeleton-anim-dark\": \"skeleton_skeleton-anim-dark__34nwj\"\n};\n\nvar Skeleton = function Skeleton(props) {\n  var propStyle = {\n    maxWidth: props.width,\n    width: props.round || props.square ? props.width : \"none\",\n    height: props.round || props.square ? props.width : props.height\n  };\n  var innerClassName = [style.skeleton, props.className];\n\n  if (props.round) {\n    innerClassName.push(style.round);\n  }\n\n  if (props.dark) {\n    innerClassName.push(style.dark);\n  } else {\n    innerClassName.push(style.light);\n  }\n\n  return React.createElement(\"div\", {\n    className: innerClassName.join(\" \"),\n    style: _assign(_assign({}, propStyle), props.style)\n  });\n};\n\nexport default Skeleton;","import Skeleton from \"@pedox/react-skeleton\";\nimport \"@pedox/react-skeleton/dist/index.css\";\nimport React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>@pedox/react-skeleton</h1>\n      <a href=\"https://github.com/pedox/react-skeleton\">Github Link</a>\n      <p>\n        My approach to build this package is provide easy loading skeleton\n        without any doubt.\n      </p>\n      <h1>Installation</h1>\n      <SyntaxHighlighter language=\"bash\" style={atomDark}>\n        {`npm install @pedox/react-skeleton`}\n      </SyntaxHighlighter>\n      OR\n      <SyntaxHighlighter language=\"bash\" style={atomDark}>\n        {`yarn add @pedox/react-skeleton`}\n      </SyntaxHighlighter>\n      <h1>Basic Usage</h1>\n      <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n        {`import React from 'react'\nimport Skeleton from \"@pedox/react-skeleton\";\nimport \"@pedox/react-skeleton/dist/index.css\";\n\nconst App = () => (\n  <div className='app'>\n    <Skeleton />\n  </div>\n)\nexport default App\n`}\n      </SyntaxHighlighter>\n      <h1>Skeleton Example</h1>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n        {`<Skeleton />`}\n      </SyntaxHighlighter>\n      <h1>Custom Width</h1>\n      <Skeleton width={60} />\n      <Skeleton width={100} />\n      <Skeleton width={200} />\n      <Skeleton width={50} />\n      <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n        {`<Skeleton width={60} />`}\n      </SyntaxHighlighter>\n      <h1>Custom Height</h1>\n      <Skeleton width={400} height={8} />\n      <Skeleton width={200} height={8} />\n      <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n        {`<Skeleton width={400} height={8} />`}\n      </SyntaxHighlighter>\n      <h1>Rounded</h1>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div>\n          <Skeleton round width={60} />\n        </div>\n        <div style={{ flex: 1, marginLeft: \"20px\" }}>\n          <Skeleton width={200} />\n          <Skeleton width={100} />\n        </div>\n      </div>\n      <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n        {`<Skeleton round width={60} />`}\n      </SyntaxHighlighter>\n      <h1>Square</h1>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div>\n          <Skeleton square width={60} />\n        </div>\n        <div style={{ flex: 1, marginLeft: \"20px\" }}>\n          <Skeleton width={200} />\n          <Skeleton width={100} />\n        </div>\n      </div>\n      <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n        {`<Skeleton square width={60} />`}\n      </SyntaxHighlighter>\n      <div\n        style={{\n          background: \"#333\",\n          color: \"#fff\",\n          margin: \"15px -30px\",\n          padding: \"5px 30px 15px\",\n        }}\n      >\n        <h1>Dark Mode</h1>\n        <Skeleton width={400} dark />\n        <Skeleton width={200} height={10} dark />\n      </div>\n      <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n        {`<Skeleton dark width={400} />`}\n      </SyntaxHighlighter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}